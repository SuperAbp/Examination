@page "/my/favorite"
@using AntDesign.TableModels
@using Microsoft.Extensions.Localization
@using SuperAbp.Exam.Favorites
@using SuperAbp.Exam.Localization

<Card Title="考试记录">
    <Button OnClick="BeganAsync">开始练习</Button>
    <Table TItem="FavoriteListDto"
    DataSource="@_favorites"
    Total="_totalCount"
    Loading="_loading"
    RowKey="x=>x.Id"
    @bind-PageIndex="_currentPage"
    @bind-PageSize="_pageSize"
    OnChange="Change">
        <PropertyColumn Property="c => c.QuestionName" Title="@L["QuestionName"]"/>
        <PropertyColumn Property="c => c.QuestionType" Title="@L["QuestionType"]" />
        <PropertyColumn Property="c => c.CreationTime" Title="@L["CreationTime"]"/>
        <ActionColumn Title="@L["Action"]">
            <Space>
                <SpaceItem>
                    <Button Type="@ButtonType.Primary" OnClick="()=>BeganAsync(context.Id)">@L["BeganTraining"]</Button>
                </SpaceItem>
            </Space>
        </ActionColumn>
    </Table>
</Card>

@inject IStringLocalizer<ExamResource> L
@inject NavigationManager Navigation
@inject IFavoriteAppService FavoriteAppService
@code {
    IReadOnlyList<FavoriteListDto> _favorites;
    int _currentPage = 1;
    int _pageSize = 10;
    int _totalCount = 0;
    bool _loading = true;

    public async Task Change(QueryModel model)
    {
        await GetListAsync(model.PageIndex, model.PageSize);
    }
    protected async Task GetListAsync(int pageIndex, int pageSize, string sorting = null)
    {
        _loading = true;
        var result = await FavoriteAppService.GetListAsync(new () { SkipCount = 0, MaxResultCount = _pageSize });
        _favorites = result.Items;
        _totalCount = (int)result.TotalCount;
        _loading = false;
    }
    private async Task BeganAsync()
    {
        Navigation.NavigateTo($"/my/favorite/training");
        await Task.CompletedTask;
    }
    private async Task BeganAsync(Guid id)
    {        
        Navigation.NavigateTo($"/my/favorite/training");
        await Task.CompletedTask;
    }
}