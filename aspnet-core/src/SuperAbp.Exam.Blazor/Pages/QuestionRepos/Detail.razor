@page "/repository/{id:guid}"

<style>
    h3{
        font-weight: 700;
    }
</style>

@if(_repository is not null)
{
    <Card>
        <TitleTemplate>
            <span @onclick="GoDetail" style="cursor: pointer">
                <Icon Type="arrow-left" Theme="outline" />返回
            </span>
            <Divider Type="DirectionVHType.Vertical" />@_repository.Title
        </TitleTemplate>
        <Body>
            @if (!_repository.Remark.IsNullOrWhiteSpace())
            {
                <h3>简介：</h3>
                <p>@_repository.Remark</p>
                <Divider />
            }

            <h3>自由练习</h3>
            <Button OnClick="() => StartTraining(0)">顺序练习</Button>
            <Button OnClick="() => StartTraining(1)">背题模式</Button>

            <Divider />
        <h3>题型练习</h3>
        @foreach (var questionType in GetQuestionTypes())
        {
                <Button OnClick="() => StartTraining(0, (int)questionType)">@L["QuestionType:"+questionType]</Button>
        }
        </Body>
    </Card>
}
@using SuperAbp.Exam.QuestionManagement.QuestionRepos
@using Microsoft.Extensions.Localization
@using SuperAbp.Exam.Localization
@using SuperAbp.Exam.QuestionManagement.Questions
@inject IStringLocalizer<ExamResource> L
@inject IQuestionRepoAppService QuestionRepoAppService
@inject NavigationManager Navigation
@code {
    [Parameter]
    public Guid Id { get; set; }

    QuestionRepoDetailDto _repository;

    protected override async Task OnInitializedAsync()
    {
        _repository = await QuestionRepoAppService.GetAsync(Id);
    }

    private Array GetQuestionTypes()
    {
        return Enum.GetValues(typeof(QuestionType));
    }
    private void StartTraining(int trainType, int? questionType = null)
    {
        var url = $"/repository/{Id}/training";
        if (trainType > 0)
        {
            url = $"/repository/{Id}/training/{trainType}";
        }
        else
        {
            if (questionType.HasValue)
            {
                url += "?questionType=" + questionType.Value;
            }
        }
        Navigation.NavigateTo(url);
    }
    private void GoDetail()
    {
        Navigation.NavigateTo("/repository");
    }

}
