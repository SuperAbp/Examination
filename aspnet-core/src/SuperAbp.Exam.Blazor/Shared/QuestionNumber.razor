@using Microsoft.Extensions.Localization
@using SuperAbp.Exam.Localization
@using SuperAbp.Exam.QuestionManagement.Questions
﻿<Card>
    <ChildContent>
        <Space Direction="DirectionVHType.Vertical" Style="width: 100%;">
        @foreach (QuestionNumberVo numbers in Numbers)
        {
            int i = 0;
            <SpaceItem Style="width: 100%;">
                <Flex Justify="space-between" Align="center">
                    <h4>
                        <span>@L["QuestionType:" + numbers.QuestionType]</span>
                    </h4>
                    <span>共@(numbers.Questions.Count)题/共@((numbers.TotalScore??0).ToString("####"))分</span>
                </Flex>
                @foreach (QuestionNumberVo.QuestionIndex question in numbers.Questions)
                {
                    string color = GetNumberColor(question.QuestionId);
                    <Tag Color="@color" OnClick="async () => await ClickAsync(question.QuestionId)">@(i++)</Tag>
                }
            </SpaceItem>
        }
        </Space>
    </ChildContent>
</Card>
@inject IStringLocalizer<ExamResource> L
@code {
    [Parameter]
    public Guid CurrentId { get; set; }
    [Parameter]
    public EventCallback<Guid> CurrentIdChanged { get; set; }
    [Parameter]
    public IReadOnlyList<QuestionNumberVo> Numbers { get; set; }
    [Parameter]
    public IReadOnlyList<Guid> SuccessIds { get; set; } = Array.Empty<Guid>();
    [Parameter]
    public IReadOnlyList<Guid> ErrorIds { get; set; } = Array.Empty<Guid>();
    [Parameter]
    public EventCallback<Guid> OnChanged { get; set; }

    string GetNumberColor(Guid id)
    {
        if (CurrentId == id)
        {
            return "processing";
        }
        if (SuccessIds.Contains(id))
        {
            return "success";
        }
        if (ErrorIds.Contains(id))
        {
            return "error";
        }
        return "default";
    }

    async Task ClickAsync(Guid id)
    {
        await CurrentIdChanged.InvokeAsync(CurrentId);
        await OnChanged.InvokeAsync(id);
    }
}